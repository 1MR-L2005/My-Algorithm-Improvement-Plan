class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        vector<int>goal;
        int left=0;
        int right=k-1;
        pair<int,int> max={INT_MIN,-1};
        for(int i=left;i<right+1;i++)
        {
            if(nums[i]>max.first)
            {
                max.first=nums[i];
                max.second=i;
            }
        }
        while(right<nums.size())
        {
            if(nums[right]>max.first)
            {
                max.first=nums[right];
                max.second=right;        
            }
            if(left>max.second)
            {
                max.first=nums[left];
                max.second=left;
                for(int i=left;i<right+1;i++)
                {
                    if(nums[i]>=max.first)
                    {
                        max.first=nums[i];
                        max.second=i;
                    }
                }
            }
            goal.push_back(max.first);
            left++;
            right++;
        }
        return goal;
    }
};
