/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int tree_depth(TreeNode*root)
    {
        if(!root)return 0;
        int left=tree_depth(root->left);
        int right=tree_depth(root->right);
        return (left>right)?(left+1):(right+1);
    }
    bool isBalanced(TreeNode* root) {
        if(!root)return true;
        if(!isBalanced(root->left)||!isBalanced(root->right))return false;
        int left=tree_depth(root->left);
        int right=tree_depth(root->right);
        if(left-right<=-2||left-right>=2)return false;
        else return true;  
    }
};
