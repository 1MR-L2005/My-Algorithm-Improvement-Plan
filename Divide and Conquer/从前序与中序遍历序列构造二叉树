/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* new_buildTree(int l,int r,int& v,vector<int>&preorder,vector<int>&inorder)
    {
        TreeNode*node=nullptr;
        for(int i=l;i<=r;i++)
        {
            if(v<preorder.size()&&preorder[v]==inorder[i])
            {
                node=new TreeNode;
                node->val=preorder[v++];
                node->left=new_buildTree(l,i-1,v,preorder,inorder);
                node->right=new_buildTree(i+1,r,v,preorder,inorder);
            }
        }
        return node;
    }
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        int v=0;
        return new_buildTree(0,preorder.size()-1,v,preorder,inorder);
    }
};
