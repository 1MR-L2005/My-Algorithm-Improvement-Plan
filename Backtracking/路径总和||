/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void search_targetpath(TreeNode*root,int targetSum,int currorsum,vector<vector<int>>&goal,vector<int>path)
    {
        if(!root)return;
        path.push_back(root->val);
        if(currorsum+root->val==targetSum){
            if(!root->left&&!root->right) goal.push_back(path);
        }
        search_targetpath(root->left,targetSum,currorsum+root->val,goal,path);
        search_targetpath(root->right,targetSum,currorsum+root->val,goal,path);
        return;
    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>>goal;
        vector<int>path;
        search_targetpath(root,targetSum,0,goal,path);
        return goal;
    }
};
